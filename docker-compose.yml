version: "3.7"

services:
  tours-api:
    build:
      context: ./tours-api
      dockerfile: Dockerfile
    image: tours-api
    container_name: tours_api_container
    restart: always
    networks:
      - services_network
    ports:
      - "3000:3000"
    depends_on:
      - tours_database
    environment:
      POSTGRES_ADDR: "postgres://postgres:root@tours_database:5432/tours"
      SERVER_PORT: 3000

  encounters-api:
    build:
      context: ./encounters-api
      dockerfile: Dockerfile
    image: encounters-api
    container_name: encounters_api_container
    restart: always
    networks:
      - services_network
    ports:
      - "3030:3030"
    depends_on:
      - encounters_database
    environment:
      MONGODB_ADDR: "mongodb://encounters_database:27017"
      SERVER_PORT: 3030

  tours_database:
    image: postgres
    container_name: tours_db_container
    restart: always
    networks:
      - services_network
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: tours
    volumes:
      - tours_database_data:/var/lib/postgresql/data

  encounters_database:
    image: mongo
    container_name: encounters_db_container  # Promenjeno ime kontejnera
    restart: always
    networks:
      - services_network
    ports:
      - "27017:27017"  # MongoDB port
    volumes:
      - encounters_database_data:/data/db  # MongoDB podaci

  mongo-express:
    image: mongo-express
    container_name: mongo_express_container
    restart: always
    networks:
      - services_network
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: "encounters_database"  # Povezano sa MongoDB kontejnerom
      ME_CONFIG_MONGODB_PORT: "27017"
    depends_on:
      - encounters_database

volumes:
  tours_database_data:
    name: tours_database_volume

  encounters_database_data:
    name: encounters_database_volume

networks:
  services_network:
    name: services_network
    driver: bridge