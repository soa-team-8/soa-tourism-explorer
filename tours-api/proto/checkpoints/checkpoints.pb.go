// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: checkpoints/checkpoints.proto

package checkpoints

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ActionResponse2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succes bool `protobuf:"varint,1,opt,name=succes,proto3" json:"succes,omitempty"`
}

func (x *ActionResponse2) Reset() {
	*x = ActionResponse2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse2) ProtoMessage() {}

func (x *ActionResponse2) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse2.ProtoReflect.Descriptor instead.
func (*ActionResponse2) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{0}
}

func (x *ActionResponse2) GetSucces() bool {
	if x != nil {
		return x.Succes
	}
	return false
}

type CreateCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoint *CheckpointDto2 `protobuf:"bytes,1,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
	Status     string          `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CreateCheckpointRequest) Reset() {
	*x = CreateCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckpointRequest) ProtoMessage() {}

func (x *CreateCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckpointRequest.ProtoReflect.Descriptor instead.
func (*CreateCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCheckpointRequest) GetCheckpoint() *CheckpointDto2 {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

func (x *CreateCheckpointRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CreateCheckpointSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckpointSecret *CheckpointSecretDto2 `protobuf:"bytes,1,opt,name=checkpoint_secret,json=checkpointSecret,proto3" json:"checkpoint_secret,omitempty"`
	CheckpointId     int32                 `protobuf:"varint,2,opt,name=checkpoint_id,json=checkpointId,proto3" json:"checkpoint_id,omitempty"`
}

func (x *CreateCheckpointSecretRequest) Reset() {
	*x = CreateCheckpointSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCheckpointSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCheckpointSecretRequest) ProtoMessage() {}

func (x *CreateCheckpointSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCheckpointSecretRequest.ProtoReflect.Descriptor instead.
func (*CreateCheckpointSecretRequest) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCheckpointSecretRequest) GetCheckpointSecret() *CheckpointSecretDto2 {
	if x != nil {
		return x.CheckpointSecret
	}
	return nil
}

func (x *CreateCheckpointSecretRequest) GetCheckpointId() int32 {
	if x != nil {
		return x.CheckpointId
	}
	return 0
}

type UpdateCheckpointSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckpointSecret *CheckpointSecretDto2 `protobuf:"bytes,1,opt,name=checkpoint_secret,json=checkpointSecret,proto3" json:"checkpoint_secret,omitempty"`
	CheckpointId     int32                 `protobuf:"varint,2,opt,name=checkpoint_id,json=checkpointId,proto3" json:"checkpoint_id,omitempty"`
}

func (x *UpdateCheckpointSecretRequest) Reset() {
	*x = UpdateCheckpointSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckpointSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckpointSecretRequest) ProtoMessage() {}

func (x *UpdateCheckpointSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckpointSecretRequest.ProtoReflect.Descriptor instead.
func (*UpdateCheckpointSecretRequest) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateCheckpointSecretRequest) GetCheckpointSecret() *CheckpointSecretDto2 {
	if x != nil {
		return x.CheckpointSecret
	}
	return nil
}

func (x *UpdateCheckpointSecretRequest) GetCheckpointId() int32 {
	if x != nil {
		return x.CheckpointId
	}
	return 0
}

type DeleteCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCheckpointRequest) Reset() {
	*x = DeleteCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCheckpointRequest) ProtoMessage() {}

func (x *DeleteCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCheckpointRequest.ProtoReflect.Descriptor instead.
func (*DeleteCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteCheckpointRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCheckpointsByTourRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Id       int32 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCheckpointsByTourRequest) Reset() {
	*x = GetCheckpointsByTourRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckpointsByTourRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckpointsByTourRequest) ProtoMessage() {}

func (x *GetCheckpointsByTourRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckpointsByTourRequest.ProtoReflect.Descriptor instead.
func (*GetCheckpointsByTourRequest) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{5}
}

func (x *GetCheckpointsByTourRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetCheckpointsByTourRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetCheckpointsByTourRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetCheckpointDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetCheckpointDetailsRequest) Reset() {
	*x = GetCheckpointDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCheckpointDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCheckpointDetailsRequest) ProtoMessage() {}

func (x *GetCheckpointDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCheckpointDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetCheckpointDetailsRequest) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{6}
}

func (x *GetCheckpointDetailsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoint *CheckpointDto2 `protobuf:"bytes,1,opt,name=checkpoint,proto3" json:"checkpoint,omitempty"`
	Id         int32           `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UpdateCheckpointRequest) Reset() {
	*x = UpdateCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCheckpointRequest) ProtoMessage() {}

func (x *UpdateCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCheckpointRequest.ProtoReflect.Descriptor instead.
func (*UpdateCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateCheckpointRequest) GetCheckpoint() *CheckpointDto2 {
	if x != nil {
		return x.Checkpoint
	}
	return nil
}

func (x *UpdateCheckpointRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAllPagedCheckpointsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetAllPagedCheckpointsRequest) Reset() {
	*x = GetAllPagedCheckpointsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllPagedCheckpointsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllPagedCheckpointsRequest) ProtoMessage() {}

func (x *GetAllPagedCheckpointsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllPagedCheckpointsRequest.ProtoReflect.Descriptor instead.
func (*GetAllPagedCheckpointsRequest) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{8}
}

func (x *GetAllPagedCheckpointsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetAllPagedCheckpointsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListCheckpointDtoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Checkpoints []*CheckpointDto2 `protobuf:"bytes,1,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
}

func (x *ListCheckpointDtoResponse) Reset() {
	*x = ListCheckpointDtoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCheckpointDtoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCheckpointDtoResponse) ProtoMessage() {}

func (x *ListCheckpointDtoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCheckpointDtoResponse.ProtoReflect.Descriptor instead.
func (*ListCheckpointDtoResponse) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{9}
}

func (x *ListCheckpointDtoResponse) GetCheckpoints() []*CheckpointDto2 {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

type CheckpointDto2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TourId                int64                 `protobuf:"varint,2,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
	AuthorId              int64                 `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Longitude             float64               `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude              float64               `protobuf:"fixed64,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Name                  string                `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Description           string                `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Pictures              []string              `protobuf:"bytes,8,rep,name=pictures,proto3" json:"pictures,omitempty"`
	RequiredTimeInSeconds float64               `protobuf:"fixed64,9,opt,name=required_time_in_seconds,json=requiredTimeInSeconds,proto3" json:"required_time_in_seconds,omitempty"`
	CheckpointSecret      *CheckpointSecretDto2 `protobuf:"bytes,10,opt,name=checkpoint_secret,json=checkpointSecret,proto3" json:"checkpoint_secret,omitempty"`
	EncounterId           int64                 `protobuf:"varint,11,opt,name=encounter_id,json=encounterId,proto3" json:"encounter_id,omitempty"`
	IsSecretPrerequisite  bool                  `protobuf:"varint,12,opt,name=is_secret_prerequisite,json=isSecretPrerequisite,proto3" json:"is_secret_prerequisite,omitempty"`
}

func (x *CheckpointDto2) Reset() {
	*x = CheckpointDto2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointDto2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointDto2) ProtoMessage() {}

func (x *CheckpointDto2) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointDto2.ProtoReflect.Descriptor instead.
func (*CheckpointDto2) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{10}
}

func (x *CheckpointDto2) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CheckpointDto2) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *CheckpointDto2) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CheckpointDto2) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CheckpointDto2) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CheckpointDto2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckpointDto2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CheckpointDto2) GetPictures() []string {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *CheckpointDto2) GetRequiredTimeInSeconds() float64 {
	if x != nil {
		return x.RequiredTimeInSeconds
	}
	return 0
}

func (x *CheckpointDto2) GetCheckpointSecret() *CheckpointSecretDto2 {
	if x != nil {
		return x.CheckpointSecret
	}
	return nil
}

func (x *CheckpointDto2) GetEncounterId() int64 {
	if x != nil {
		return x.EncounterId
	}
	return 0
}

func (x *CheckpointDto2) GetIsSecretPrerequisite() bool {
	if x != nil {
		return x.IsSecretPrerequisite
	}
	return false
}

type CheckpointSecretDto2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Pictures    []string `protobuf:"bytes,2,rep,name=pictures,proto3" json:"pictures,omitempty"`
}

func (x *CheckpointSecretDto2) Reset() {
	*x = CheckpointSecretDto2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkpoints_checkpoints_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointSecretDto2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointSecretDto2) ProtoMessage() {}

func (x *CheckpointSecretDto2) ProtoReflect() protoreflect.Message {
	mi := &file_checkpoints_checkpoints_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointSecretDto2.ProtoReflect.Descriptor instead.
func (*CheckpointSecretDto2) Descriptor() ([]byte, []int) {
	return file_checkpoints_checkpoints_proto_rawDescGZIP(), []int{11}
}

func (x *CheckpointSecretDto2) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CheckpointSecretDto2) GetPictures() []string {
	if x != nil {
		return x.Pictures
	}
	return nil
}

var File_checkpoints_checkpoints_proto protoreflect.FileDescriptor

var file_checkpoints_checkpoints_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2f, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x29, 0x0a, 0x0f, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x22, 0x62, 0x0a, 0x17, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x32, 0x52, 0x0a, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x88,
	0x01, 0x0a, 0x1d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x42, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x74,
	0x6f, 0x32, 0x52, 0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x88, 0x01, 0x0a, 0x1d, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x11, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x74, 0x6f, 0x32, 0x52, 0x10, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x23, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x49, 0x64, 0x22, 0x29, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x5e, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x42, 0x79, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x2d, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5a,
	0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x0a, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x32, 0x52, 0x0a,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x50, 0x0a, 0x1d, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x4e, 0x0a, 0x19,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74,
	0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0b, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x32, 0x52,
	0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x22, 0xb8, 0x03, 0x0a,
	0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x32, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75,
	0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f, 0x6e, 0x67, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x73, 0x12, 0x37, 0x0a, 0x18, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x11, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x74, 0x6f, 0x32, 0x52, 0x10, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x5f, 0x70,
	0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x69, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x72, 0x65, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x22, 0x54, 0x0a, 0x14, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x74, 0x6f, 0x32, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x32, 0xd2, 0x04,
	0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44,
	0x74, 0x6f, 0x32, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12,
	0x1e, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x0f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x32,
	0x22, 0x00, 0x12, 0x4b, 0x0a, 0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x1e, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53,
	0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x32, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x12, 0x18, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0x22,
	0x00, 0x12, 0x4a, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x42, 0x79, 0x54, 0x6f, 0x75,
	0x72, 0x12, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x73, 0x42, 0x79, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x44, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a,
	0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x32, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x10, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x32, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x16, 0x47, 0x65,
	0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x73, 0x12, 0x1e, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_checkpoints_checkpoints_proto_rawDescOnce sync.Once
	file_checkpoints_checkpoints_proto_rawDescData = file_checkpoints_checkpoints_proto_rawDesc
)

func file_checkpoints_checkpoints_proto_rawDescGZIP() []byte {
	file_checkpoints_checkpoints_proto_rawDescOnce.Do(func() {
		file_checkpoints_checkpoints_proto_rawDescData = protoimpl.X.CompressGZIP(file_checkpoints_checkpoints_proto_rawDescData)
	})
	return file_checkpoints_checkpoints_proto_rawDescData
}

var file_checkpoints_checkpoints_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_checkpoints_checkpoints_proto_goTypes = []interface{}{
	(*ActionResponse2)(nil),               // 0: ActionResponse2
	(*CreateCheckpointRequest)(nil),       // 1: CreateCheckpointRequest
	(*CreateCheckpointSecretRequest)(nil), // 2: CreateCheckpointSecretRequest
	(*UpdateCheckpointSecretRequest)(nil), // 3: UpdateCheckpointSecretRequest
	(*DeleteCheckpointRequest)(nil),       // 4: DeleteCheckpointRequest
	(*GetCheckpointsByTourRequest)(nil),   // 5: GetCheckpointsByTourRequest
	(*GetCheckpointDetailsRequest)(nil),   // 6: GetCheckpointDetailsRequest
	(*UpdateCheckpointRequest)(nil),       // 7: UpdateCheckpointRequest
	(*GetAllPagedCheckpointsRequest)(nil), // 8: GetAllPagedCheckpointsRequest
	(*ListCheckpointDtoResponse)(nil),     // 9: ListCheckpointDtoResponse
	(*CheckpointDto2)(nil),                // 10: CheckpointDto2
	(*CheckpointSecretDto2)(nil),          // 11: CheckpointSecretDto2
}
var file_checkpoints_checkpoints_proto_depIdxs = []int32{
	10, // 0: CreateCheckpointRequest.checkpoint:type_name -> CheckpointDto2
	11, // 1: CreateCheckpointSecretRequest.checkpoint_secret:type_name -> CheckpointSecretDto2
	11, // 2: UpdateCheckpointSecretRequest.checkpoint_secret:type_name -> CheckpointSecretDto2
	10, // 3: UpdateCheckpointRequest.checkpoint:type_name -> CheckpointDto2
	10, // 4: ListCheckpointDtoResponse.checkpoints:type_name -> CheckpointDto2
	11, // 5: CheckpointDto2.checkpoint_secret:type_name -> CheckpointSecretDto2
	1,  // 6: CheckpointsService.CreateCheckpoint:input_type -> CreateCheckpointRequest
	2,  // 7: CheckpointsService.CreateCheckpointSecret:input_type -> CreateCheckpointSecretRequest
	3,  // 8: CheckpointsService.UpdateCheckpointSecret:input_type -> UpdateCheckpointSecretRequest
	4,  // 9: CheckpointsService.DeleteCheckpoint:input_type -> DeleteCheckpointRequest
	5,  // 10: CheckpointsService.GetAllByTour:input_type -> GetCheckpointsByTourRequest
	6,  // 11: CheckpointsService.GetById:input_type -> GetCheckpointDetailsRequest
	7,  // 12: CheckpointsService.UpdateCheckpoint:input_type -> UpdateCheckpointRequest
	8,  // 13: CheckpointsService.GetAllPagedCheckpoints:input_type -> GetAllPagedCheckpointsRequest
	10, // 14: CheckpointsService.CreateCheckpoint:output_type -> CheckpointDto2
	10, // 15: CheckpointsService.CreateCheckpointSecret:output_type -> CheckpointDto2
	10, // 16: CheckpointsService.UpdateCheckpointSecret:output_type -> CheckpointDto2
	0,  // 17: CheckpointsService.DeleteCheckpoint:output_type -> ActionResponse2
	9,  // 18: CheckpointsService.GetAllByTour:output_type -> ListCheckpointDtoResponse
	10, // 19: CheckpointsService.GetById:output_type -> CheckpointDto2
	10, // 20: CheckpointsService.UpdateCheckpoint:output_type -> CheckpointDto2
	9,  // 21: CheckpointsService.GetAllPagedCheckpoints:output_type -> ListCheckpointDtoResponse
	14, // [14:22] is the sub-list for method output_type
	6,  // [6:14] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_checkpoints_checkpoints_proto_init() }
func file_checkpoints_checkpoints_proto_init() {
	if File_checkpoints_checkpoints_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_checkpoints_checkpoints_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkpoints_checkpoints_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkpoints_checkpoints_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCheckpointSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkpoints_checkpoints_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckpointSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkpoints_checkpoints_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkpoints_checkpoints_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckpointsByTourRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkpoints_checkpoints_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCheckpointDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkpoints_checkpoints_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkpoints_checkpoints_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllPagedCheckpointsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkpoints_checkpoints_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListCheckpointDtoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkpoints_checkpoints_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointDto2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkpoints_checkpoints_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointSecretDto2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_checkpoints_checkpoints_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_checkpoints_checkpoints_proto_goTypes,
		DependencyIndexes: file_checkpoints_checkpoints_proto_depIdxs,
		MessageInfos:      file_checkpoints_checkpoints_proto_msgTypes,
	}.Build()
	File_checkpoints_checkpoints_proto = out.File
	file_checkpoints_checkpoints_proto_rawDesc = nil
	file_checkpoints_checkpoints_proto_goTypes = nil
	file_checkpoints_checkpoints_proto_depIdxs = nil
}
