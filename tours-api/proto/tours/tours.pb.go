// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v5.26.1
// source: tours/tours.proto

package tours

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetAllToursRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetAllToursRequest) Reset() {
	*x = GetAllToursRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAllToursRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAllToursRequest) ProtoMessage() {}

func (x *GetAllToursRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAllToursRequest.ProtoReflect.Descriptor instead.
func (*GetAllToursRequest) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{0}
}

type GetToursByAuthorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page     int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
}

func (x *GetToursByAuthorRequest) Reset() {
	*x = GetToursByAuthorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetToursByAuthorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetToursByAuthorRequest) ProtoMessage() {}

func (x *GetToursByAuthorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetToursByAuthorRequest.ProtoReflect.Descriptor instead.
func (*GetToursByAuthorRequest) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{1}
}

func (x *GetToursByAuthorRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetToursByAuthorRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListTourDtoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tours []*TourDto `protobuf:"bytes,1,rep,name=tours,proto3" json:"tours,omitempty"`
}

func (x *ListTourDtoResponse) Reset() {
	*x = ListTourDtoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListTourDtoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTourDtoResponse) ProtoMessage() {}

func (x *ListTourDtoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTourDtoResponse.ProtoReflect.Descriptor instead.
func (*ListTourDtoResponse) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{2}
}

func (x *ListTourDtoResponse) GetTours() []*TourDto {
	if x != nil {
		return x.Tours
	}
	return nil
}

type AddEquipmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourId      int32 `protobuf:"varint,1,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
	EquipmentId int32 `protobuf:"varint,2,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
}

func (x *AddEquipmentRequest) Reset() {
	*x = AddEquipmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEquipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEquipmentRequest) ProtoMessage() {}

func (x *AddEquipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEquipmentRequest.ProtoReflect.Descriptor instead.
func (*AddEquipmentRequest) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{3}
}

func (x *AddEquipmentRequest) GetTourId() int32 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *AddEquipmentRequest) GetEquipmentId() int32 {
	if x != nil {
		return x.EquipmentId
	}
	return 0
}

type RemoveEquipmentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TourId      int32 `protobuf:"varint,1,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
	EquipmentId int32 `protobuf:"varint,2,opt,name=equipment_id,json=equipmentId,proto3" json:"equipment_id,omitempty"`
}

func (x *RemoveEquipmentRequest) Reset() {
	*x = RemoveEquipmentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveEquipmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveEquipmentRequest) ProtoMessage() {}

func (x *RemoveEquipmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveEquipmentRequest.ProtoReflect.Descriptor instead.
func (*RemoveEquipmentRequest) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{4}
}

func (x *RemoveEquipmentRequest) GetTourId() int32 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *RemoveEquipmentRequest) GetEquipmentId() int32 {
	if x != nil {
		return x.EquipmentId
	}
	return 0
}

type GetTourDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTourDetailsRequest) Reset() {
	*x = GetTourDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTourDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTourDetailsRequest) ProtoMessage() {}

func (x *GetTourDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTourDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetTourDetailsRequest) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{5}
}

func (x *GetTourDetailsRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteTourRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteTourRequest) Reset() {
	*x = DeleteTourRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTourRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTourRequest) ProtoMessage() {}

func (x *DeleteTourRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTourRequest.ProtoReflect.Descriptor instead.
func (*DeleteTourRequest) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteTourRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type PublishTourRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *PublishTourRequest) Reset() {
	*x = PublishTourRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishTourRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishTourRequest) ProtoMessage() {}

func (x *PublishTourRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishTourRequest.ProtoReflect.Descriptor instead.
func (*PublishTourRequest) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{7}
}

func (x *PublishTourRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type ArchiveTourRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ArchiveTourRequest) Reset() {
	*x = ArchiveTourRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchiveTourRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchiveTourRequest) ProtoMessage() {}

func (x *ArchiveTourRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchiveTourRequest.ProtoReflect.Descriptor instead.
func (*ArchiveTourRequest) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{8}
}

func (x *ArchiveTourRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type UpdateTourRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Tour *TourDto `protobuf:"bytes,2,opt,name=tour,proto3" json:"tour,omitempty"`
}

func (x *UpdateTourRequest) Reset() {
	*x = UpdateTourRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTourRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTourRequest) ProtoMessage() {}

func (x *UpdateTourRequest) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTourRequest.ProtoReflect.Descriptor instead.
func (*UpdateTourRequest) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTourRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateTourRequest) GetTour() *TourDto {
	if x != nil {
		return x.Tour
	}
	return nil
}

type ActionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Succes bool `protobuf:"varint,1,opt,name=succes,proto3" json:"succes,omitempty"`
}

func (x *ActionResponse) Reset() {
	*x = ActionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionResponse) ProtoMessage() {}

func (x *ActionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionResponse.ProtoReflect.Descriptor instead.
func (*ActionResponse) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{10}
}

func (x *ActionResponse) GetSucces() bool {
	if x != nil {
		return x.Succes
	}
	return false
}

type TourDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int32               `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string              `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description        string              `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	DemandingnessLevel string              `protobuf:"bytes,4,opt,name=demandingness_level,json=demandingnessLevel,proto3" json:"demandingness_level,omitempty"`
	Price              float64             `protobuf:"fixed64,5,opt,name=price,proto3" json:"price,omitempty"`
	Tags               []string            `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	AuthorId           int32               `protobuf:"varint,7,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Status             string              `protobuf:"bytes,8,opt,name=status,proto3" json:"status,omitempty"`
	Equipment          []*EquipmentDto     `protobuf:"bytes,9,rep,name=equipment,proto3" json:"equipment,omitempty"`
	Checkpoints        []*CheckpointDto    `protobuf:"bytes,10,rep,name=checkpoints,proto3" json:"checkpoints,omitempty"`
	PublishedTours     []*PublishedTourDto `protobuf:"bytes,11,rep,name=published_tours,json=publishedTours,proto3" json:"published_tours,omitempty"`
	ArchivedTours      []*ArchivedTourDto  `protobuf:"bytes,12,rep,name=archived_tours,json=archivedTours,proto3" json:"archived_tours,omitempty"`
	TourTimes          []*TourTimeDto      `protobuf:"bytes,13,rep,name=tour_times,json=tourTimes,proto3" json:"tour_times,omitempty"`
	TourRatings        []*TourRatingDto    `protobuf:"bytes,14,rep,name=tour_ratings,json=tourRatings,proto3" json:"tour_ratings,omitempty"`
	Closed             bool                `protobuf:"varint,15,opt,name=closed,proto3" json:"closed,omitempty"`
}

func (x *TourDto) Reset() {
	*x = TourDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourDto) ProtoMessage() {}

func (x *TourDto) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourDto.ProtoReflect.Descriptor instead.
func (*TourDto) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{11}
}

func (x *TourDto) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TourDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TourDto) GetDemandingnessLevel() string {
	if x != nil {
		return x.DemandingnessLevel
	}
	return ""
}

func (x *TourDto) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TourDto) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *TourDto) GetAuthorId() int32 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *TourDto) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *TourDto) GetEquipment() []*EquipmentDto {
	if x != nil {
		return x.Equipment
	}
	return nil
}

func (x *TourDto) GetCheckpoints() []*CheckpointDto {
	if x != nil {
		return x.Checkpoints
	}
	return nil
}

func (x *TourDto) GetPublishedTours() []*PublishedTourDto {
	if x != nil {
		return x.PublishedTours
	}
	return nil
}

func (x *TourDto) GetArchivedTours() []*ArchivedTourDto {
	if x != nil {
		return x.ArchivedTours
	}
	return nil
}

func (x *TourDto) GetTourTimes() []*TourTimeDto {
	if x != nil {
		return x.TourTimes
	}
	return nil
}

func (x *TourDto) GetTourRatings() []*TourRatingDto {
	if x != nil {
		return x.TourRatings
	}
	return nil
}

func (x *TourDto) GetClosed() bool {
	if x != nil {
		return x.Closed
	}
	return false
}

type EquipmentDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *EquipmentDto) Reset() {
	*x = EquipmentDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EquipmentDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EquipmentDto) ProtoMessage() {}

func (x *EquipmentDto) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EquipmentDto.ProtoReflect.Descriptor instead.
func (*EquipmentDto) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{12}
}

func (x *EquipmentDto) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *EquipmentDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *EquipmentDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type CheckpointDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TourId                int64                `protobuf:"varint,2,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
	AuthorId              int64                `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Longitude             float64              `protobuf:"fixed64,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Latitude              float64              `protobuf:"fixed64,5,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Name                  string               `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`
	Description           string               `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	Pictures              []string             `protobuf:"bytes,8,rep,name=pictures,proto3" json:"pictures,omitempty"`
	RequiredTimeInSeconds float64              `protobuf:"fixed64,9,opt,name=required_time_in_seconds,json=requiredTimeInSeconds,proto3" json:"required_time_in_seconds,omitempty"`
	CheckpointSecret      *CheckpointSecretDto `protobuf:"bytes,10,opt,name=checkpoint_secret,json=checkpointSecret,proto3" json:"checkpoint_secret,omitempty"`
	EncounterId           int64                `protobuf:"varint,11,opt,name=encounter_id,json=encounterId,proto3" json:"encounter_id,omitempty"`
	IsSecretPrerequisite  bool                 `protobuf:"varint,12,opt,name=is_secret_prerequisite,json=isSecretPrerequisite,proto3" json:"is_secret_prerequisite,omitempty"`
}

func (x *CheckpointDto) Reset() {
	*x = CheckpointDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointDto) ProtoMessage() {}

func (x *CheckpointDto) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointDto.ProtoReflect.Descriptor instead.
func (*CheckpointDto) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{13}
}

func (x *CheckpointDto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CheckpointDto) GetTourId() int64 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *CheckpointDto) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *CheckpointDto) GetLongitude() float64 {
	if x != nil {
		return x.Longitude
	}
	return 0
}

func (x *CheckpointDto) GetLatitude() float64 {
	if x != nil {
		return x.Latitude
	}
	return 0
}

func (x *CheckpointDto) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CheckpointDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CheckpointDto) GetPictures() []string {
	if x != nil {
		return x.Pictures
	}
	return nil
}

func (x *CheckpointDto) GetRequiredTimeInSeconds() float64 {
	if x != nil {
		return x.RequiredTimeInSeconds
	}
	return 0
}

func (x *CheckpointDto) GetCheckpointSecret() *CheckpointSecretDto {
	if x != nil {
		return x.CheckpointSecret
	}
	return nil
}

func (x *CheckpointDto) GetEncounterId() int64 {
	if x != nil {
		return x.EncounterId
	}
	return 0
}

func (x *CheckpointDto) GetIsSecretPrerequisite() bool {
	if x != nil {
		return x.IsSecretPrerequisite
	}
	return false
}

type CheckpointSecretDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string   `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
	Pictures    []string `protobuf:"bytes,2,rep,name=pictures,proto3" json:"pictures,omitempty"`
}

func (x *CheckpointSecretDto) Reset() {
	*x = CheckpointSecretDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckpointSecretDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckpointSecretDto) ProtoMessage() {}

func (x *CheckpointSecretDto) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckpointSecretDto.ProtoReflect.Descriptor instead.
func (*CheckpointSecretDto) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{14}
}

func (x *CheckpointSecretDto) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CheckpointSecretDto) GetPictures() []string {
	if x != nil {
		return x.Pictures
	}
	return nil
}

type PublishedTourDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublishingDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=publishing_date,json=publishingDate,proto3" json:"publishing_date,omitempty"`
}

func (x *PublishedTourDto) Reset() {
	*x = PublishedTourDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublishedTourDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishedTourDto) ProtoMessage() {}

func (x *PublishedTourDto) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishedTourDto.ProtoReflect.Descriptor instead.
func (*PublishedTourDto) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{15}
}

func (x *PublishedTourDto) GetPublishingDate() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishingDate
	}
	return nil
}

type ArchivedTourDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArchivingDate *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=archiving_date,json=archivingDate,proto3" json:"archiving_date,omitempty"`
}

func (x *ArchivedTourDto) Reset() {
	*x = ArchivedTourDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArchivedTourDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArchivedTourDto) ProtoMessage() {}

func (x *ArchivedTourDto) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArchivedTourDto.ProtoReflect.Descriptor instead.
func (*ArchivedTourDto) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{16}
}

func (x *ArchivedTourDto) GetArchivingDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ArchivingDate
	}
	return nil
}

type TourTimeDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TimeInSeconds  float64 `protobuf:"fixed64,1,opt,name=time_in_seconds,json=timeInSeconds,proto3" json:"time_in_seconds,omitempty"`
	Distance       float64 `protobuf:"fixed64,2,opt,name=distance,proto3" json:"distance,omitempty"`
	Transportation string  `protobuf:"bytes,3,opt,name=transportation,proto3" json:"transportation,omitempty"`
}

func (x *TourTimeDto) Reset() {
	*x = TourTimeDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourTimeDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourTimeDto) ProtoMessage() {}

func (x *TourTimeDto) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourTimeDto.ProtoReflect.Descriptor instead.
func (*TourTimeDto) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{17}
}

func (x *TourTimeDto) GetTimeInSeconds() float64 {
	if x != nil {
		return x.TimeInSeconds
	}
	return 0
}

func (x *TourTimeDto) GetDistance() float64 {
	if x != nil {
		return x.Distance
	}
	return 0
}

func (x *TourTimeDto) GetTransportation() string {
	if x != nil {
		return x.Transportation
	}
	return ""
}

type TourRatingDto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Rating       int32                  `protobuf:"varint,2,opt,name=rating,proto3" json:"rating,omitempty"`
	Comment      string                 `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
	TouristId    int32                  `protobuf:"varint,4,opt,name=tourist_id,json=touristId,proto3" json:"tourist_id,omitempty"`
	TourId       int32                  `protobuf:"varint,5,opt,name=tour_id,json=tourId,proto3" json:"tour_id,omitempty"`
	TourDate     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=tour_date,json=tourDate,proto3" json:"tour_date,omitempty"`
	CreationDate *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=creation_date,json=creationDate,proto3" json:"creation_date,omitempty"`
	ImageNames   []string               `protobuf:"bytes,8,rep,name=image_names,json=imageNames,proto3" json:"image_names,omitempty"`
}

func (x *TourRatingDto) Reset() {
	*x = TourRatingDto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tours_tours_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TourRatingDto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TourRatingDto) ProtoMessage() {}

func (x *TourRatingDto) ProtoReflect() protoreflect.Message {
	mi := &file_tours_tours_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TourRatingDto.ProtoReflect.Descriptor instead.
func (*TourRatingDto) Descriptor() ([]byte, []int) {
	return file_tours_tours_proto_rawDescGZIP(), []int{18}
}

func (x *TourRatingDto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TourRatingDto) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *TourRatingDto) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

func (x *TourRatingDto) GetTouristId() int32 {
	if x != nil {
		return x.TouristId
	}
	return 0
}

func (x *TourRatingDto) GetTourId() int32 {
	if x != nil {
		return x.TourId
	}
	return 0
}

func (x *TourRatingDto) GetTourDate() *timestamppb.Timestamp {
	if x != nil {
		return x.TourDate
	}
	return nil
}

func (x *TourRatingDto) GetCreationDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreationDate
	}
	return nil
}

func (x *TourRatingDto) GetImageNames() []string {
	if x != nil {
		return x.ImageNames
	}
	return nil
}

var File_tours_tours_proto protoreflect.FileDescriptor

var file_tours_tours_proto_rawDesc = []byte{
	0x0a, 0x11, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2f, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f,
	0x75, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f,
	0x75, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a,
	0x05, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x54,
	0x6f, 0x75, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x05, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x22, 0x51, 0x0a,
	0x13, 0x41, 0x64, 0x64, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x22, 0x54, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f,
	0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x6f, 0x75,
	0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x71, 0x75, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x23, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54,
	0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x41, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x41, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x74, 0x6f, 0x75, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x04, 0x74,
	0x6f, 0x75, 0x72, 0x22, 0x28, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x22, 0xab, 0x04,
	0x0a, 0x07, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2f, 0x0a, 0x13, 0x64, 0x65, 0x6d, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64, 0x65,
	0x6d, 0x61, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x6e, 0x65, 0x73, 0x73, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2b, 0x0a, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x74,
	0x6f, 0x52, 0x09, 0x65, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x0b,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x44, 0x74,
	0x6f, 0x52, 0x0b, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x3a,
	0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x75, 0x72,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x0e, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x37, 0x0a, 0x0e, 0x61, 0x72,
	0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x74, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x6f, 0x75,
	0x72, 0x44, 0x74, 0x6f, 0x52, 0x0d, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65, 0x64, 0x54, 0x6f,
	0x75, 0x72, 0x73, 0x12, 0x2b, 0x0a, 0x0a, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x54, 0x69,
	0x6d, 0x65, 0x44, 0x74, 0x6f, 0x52, 0x09, 0x74, 0x6f, 0x75, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x12, 0x31, 0x0a, 0x0c, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x44, 0x74, 0x6f, 0x52, 0x0b, 0x74, 0x6f, 0x75, 0x72, 0x52, 0x61, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x22, 0x54, 0x0a, 0x0c, 0x45,
	0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xb6, 0x03, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x6e,
	0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69, 0x74,
	0x75, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x37, 0x0a, 0x18, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x15, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x41,
	0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x73, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x74, 0x6f, 0x52,
	0x10, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x6e, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x5f, 0x70, 0x72, 0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x72, 0x65, 0x71, 0x75, 0x69, 0x73, 0x69, 0x74, 0x65, 0x22, 0x53, 0x0a, 0x13, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x44, 0x74,
	0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x73, 0x22,
	0x57, 0x0a, 0x10, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x54, 0x6f, 0x75, 0x72,
	0x44, 0x74, 0x6f, 0x12, 0x43, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x69, 0x6e,
	0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x22, 0x54, 0x0a, 0x0f, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x64, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x74, 0x6f, 0x12, 0x41, 0x0a, 0x0e, 0x61,
	0x72, 0x63, 0x68, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0d, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x65, 0x22, 0x79,
	0x0a, 0x0b, 0x54, 0x6f, 0x75, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x44, 0x74, 0x6f, 0x12, 0x26, 0x0a,
	0x0f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x63,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x70, 0x6f, 0x72, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xa4, 0x02, 0x0a, 0x0d, 0x54, 0x6f,
	0x75, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x44, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x74, 0x6f, 0x75, 0x72, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x74, 0x6f, 0x75, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74,
	0x6f, 0x75, 0x72, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x09, 0x74, 0x6f, 0x75, 0x72, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x74, 0x6f, 0x75, 0x72, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3f,
	0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x32, 0xc1, 0x04, 0x0a, 0x0c, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x29, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x12,
	0x08, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x74, 0x6f, 0x1a, 0x0f, 0x2e, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x42, 0x79, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x12, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x42, 0x79, 0x41, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x75, 0x72,
	0x73, 0x12, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x54, 0x6f, 0x75, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x6f, 0x75,
	0x72, 0x44, 0x74, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37,
	0x0a, 0x0c, 0x41, 0x64, 0x64, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14,
	0x2e, 0x41, 0x64, 0x64, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x45, 0x71, 0x75, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x54, 0x6f, 0x75,
	0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x75, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x08, 0x2e, 0x54, 0x6f, 0x75, 0x72, 0x44, 0x74, 0x6f, 0x22, 0x00, 0x12, 0x33, 0x0a, 0x0a,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x12, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f,
	0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x35, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x6f, 0x75, 0x72,
	0x12, 0x13, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b, 0x41, 0x72, 0x63, 0x68,
	0x69, 0x76, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x13, 0x2e, 0x41, 0x72, 0x63, 0x68, 0x69, 0x76,
	0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x33, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x12, 0x12, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x75, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0f, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f,
	0x75, 0x72, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tours_tours_proto_rawDescOnce sync.Once
	file_tours_tours_proto_rawDescData = file_tours_tours_proto_rawDesc
)

func file_tours_tours_proto_rawDescGZIP() []byte {
	file_tours_tours_proto_rawDescOnce.Do(func() {
		file_tours_tours_proto_rawDescData = protoimpl.X.CompressGZIP(file_tours_tours_proto_rawDescData)
	})
	return file_tours_tours_proto_rawDescData
}

var file_tours_tours_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_tours_tours_proto_goTypes = []interface{}{
	(*GetAllToursRequest)(nil),      // 0: GetAllToursRequest
	(*GetToursByAuthorRequest)(nil), // 1: GetToursByAuthorRequest
	(*ListTourDtoResponse)(nil),     // 2: ListTourDtoResponse
	(*AddEquipmentRequest)(nil),     // 3: AddEquipmentRequest
	(*RemoveEquipmentRequest)(nil),  // 4: RemoveEquipmentRequest
	(*GetTourDetailsRequest)(nil),   // 5: GetTourDetailsRequest
	(*DeleteTourRequest)(nil),       // 6: DeleteTourRequest
	(*PublishTourRequest)(nil),      // 7: PublishTourRequest
	(*ArchiveTourRequest)(nil),      // 8: ArchiveTourRequest
	(*UpdateTourRequest)(nil),       // 9: UpdateTourRequest
	(*ActionResponse)(nil),          // 10: ActionResponse
	(*TourDto)(nil),                 // 11: TourDto
	(*EquipmentDto)(nil),            // 12: EquipmentDto
	(*CheckpointDto)(nil),           // 13: CheckpointDto
	(*CheckpointSecretDto)(nil),     // 14: CheckpointSecretDto
	(*PublishedTourDto)(nil),        // 15: PublishedTourDto
	(*ArchivedTourDto)(nil),         // 16: ArchivedTourDto
	(*TourTimeDto)(nil),             // 17: TourTimeDto
	(*TourRatingDto)(nil),           // 18: TourRatingDto
	(*timestamppb.Timestamp)(nil),   // 19: google.protobuf.Timestamp
}
var file_tours_tours_proto_depIdxs = []int32{
	11, // 0: ListTourDtoResponse.tours:type_name -> TourDto
	11, // 1: UpdateTourRequest.tour:type_name -> TourDto
	12, // 2: TourDto.equipment:type_name -> EquipmentDto
	13, // 3: TourDto.checkpoints:type_name -> CheckpointDto
	15, // 4: TourDto.published_tours:type_name -> PublishedTourDto
	16, // 5: TourDto.archived_tours:type_name -> ArchivedTourDto
	17, // 6: TourDto.tour_times:type_name -> TourTimeDto
	18, // 7: TourDto.tour_ratings:type_name -> TourRatingDto
	14, // 8: CheckpointDto.checkpoint_secret:type_name -> CheckpointSecretDto
	19, // 9: PublishedTourDto.publishing_date:type_name -> google.protobuf.Timestamp
	19, // 10: ArchivedTourDto.archiving_date:type_name -> google.protobuf.Timestamp
	19, // 11: TourRatingDto.tour_date:type_name -> google.protobuf.Timestamp
	19, // 12: TourRatingDto.creation_date:type_name -> google.protobuf.Timestamp
	11, // 13: ToursService.CreateTour:input_type -> TourDto
	1,  // 14: ToursService.GetToursByAuthor:input_type -> GetToursByAuthorRequest
	0,  // 15: ToursService.GetAllTours:input_type -> GetAllToursRequest
	3,  // 16: ToursService.AddEquipment:input_type -> AddEquipmentRequest
	4,  // 17: ToursService.RemoveEquipment:input_type -> RemoveEquipmentRequest
	5,  // 18: ToursService.GetTourDetails:input_type -> GetTourDetailsRequest
	6,  // 19: ToursService.DeleteTour:input_type -> DeleteTourRequest
	7,  // 20: ToursService.PublishTour:input_type -> PublishTourRequest
	8,  // 21: ToursService.ArchiveTour:input_type -> ArchiveTourRequest
	9,  // 22: ToursService.UpdateTour:input_type -> UpdateTourRequest
	10, // 23: ToursService.CreateTour:output_type -> ActionResponse
	2,  // 24: ToursService.GetToursByAuthor:output_type -> ListTourDtoResponse
	2,  // 25: ToursService.GetAllTours:output_type -> ListTourDtoResponse
	10, // 26: ToursService.AddEquipment:output_type -> ActionResponse
	10, // 27: ToursService.RemoveEquipment:output_type -> ActionResponse
	11, // 28: ToursService.GetTourDetails:output_type -> TourDto
	10, // 29: ToursService.DeleteTour:output_type -> ActionResponse
	10, // 30: ToursService.PublishTour:output_type -> ActionResponse
	10, // 31: ToursService.ArchiveTour:output_type -> ActionResponse
	10, // 32: ToursService.UpdateTour:output_type -> ActionResponse
	23, // [23:33] is the sub-list for method output_type
	13, // [13:23] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_tours_tours_proto_init() }
func file_tours_tours_proto_init() {
	if File_tours_tours_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tours_tours_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAllToursRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetToursByAuthorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListTourDtoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddEquipmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveEquipmentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTourDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTourRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishTourRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchiveTourRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTourRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EquipmentDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckpointSecretDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublishedTourDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArchivedTourDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourTimeDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tours_tours_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TourRatingDto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tours_tours_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tours_tours_proto_goTypes,
		DependencyIndexes: file_tours_tours_proto_depIdxs,
		MessageInfos:      file_tours_tours_proto_msgTypes,
	}.Build()
	File_tours_tours_proto = out.File
	file_tours_tours_proto_rawDesc = nil
	file_tours_tours_proto_goTypes = nil
	file_tours_tours_proto_depIdxs = nil
}
