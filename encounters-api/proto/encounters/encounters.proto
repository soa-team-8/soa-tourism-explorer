syntax = "proto3";

option go_package = "proto/encounters";

service EncounterService {
  rpc CreateEncounter(CreateEncounterRequest) returns (EncounterResponse) {}

  rpc UpdateEncounter(UpdateEncounterRequest) returns (EncounterResponse) {}

  rpc DeleteEncounter(DeleteEncounterRequest) returns (DeleteEncounterResponse) {}

  rpc GetEncounter(GetEncounterRequest) returns (EncounterResponse) {}
}


message CreateEncounterRequest {
  Encounter encounter = 1;
  int64 checkpoint_id = 2;
  bool is_secret_prerequisite = 3;
  repeated bytes images = 4;
}

message UpdateEncounterRequest {
  Encounter encounter = 1;
  repeated bytes images = 2;
}

message DeleteEncounterRequest {
  int64 id = 1;
}

message GetEncounterRequest {
  int64 id = 1;
}

message EncounterResponse {
  Encounter encounter = 1;
}

message DeleteEncounterResponse {
  bool success = 1;
}

message Encounter {
  int64 author_id = 1;
  int64 id = 2;
  string name = 3;
  string description = 4;
  int32 xp = 5;
  string status = 6;
  string type = 7;
  float longitude = 8;
  float latitude = 9;
  double location_longitude = 10;
  double location_latitude = 11;
  string image = 12;
  double range = 13;
  int32 required_people = 14;
  repeated int32 active_tourists_ids = 15;
}