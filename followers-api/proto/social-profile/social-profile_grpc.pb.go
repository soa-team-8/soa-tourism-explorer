// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             v5.26.1
// source: social-profile/social-profile.proto

package social_profile

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	SocialProfileService_Follow_FullMethodName             = "/SocialProfileService/Follow"
	SocialProfileService_UnFollow_FullMethodName           = "/SocialProfileService/UnFollow"
	SocialProfileService_GetSocialProfile_FullMethodName   = "/SocialProfileService/GetSocialProfile"
	SocialProfileService_GetRecommendations_FullMethodName = "/SocialProfileService/GetRecommendations"
)

// SocialProfileServiceClient is the client API for SocialProfileService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type SocialProfileServiceClient interface {
	Follow(ctx context.Context, in *FollowRequest, opts ...grpc.CallOption) (*FollowResponse, error)
	UnFollow(ctx context.Context, in *UnFollowRequest, opts ...grpc.CallOption) (*UnFollowResponse, error)
	GetSocialProfile(ctx context.Context, in *GetSocialProfileRequest, opts ...grpc.CallOption) (*GetSocialProfileResponse, error)
	GetRecommendations(ctx context.Context, in *GetRecommendationsRequest, opts ...grpc.CallOption) (*GetRecommendationsResponse, error)
}

type socialProfileServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSocialProfileServiceClient(cc grpc.ClientConnInterface) SocialProfileServiceClient {
	return &socialProfileServiceClient{cc}
}

func (c *socialProfileServiceClient) Follow(ctx context.Context, in *FollowRequest, opts ...grpc.CallOption) (*FollowResponse, error) {
	out := new(FollowResponse)
	err := c.cc.Invoke(ctx, SocialProfileService_Follow_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialProfileServiceClient) UnFollow(ctx context.Context, in *UnFollowRequest, opts ...grpc.CallOption) (*UnFollowResponse, error) {
	out := new(UnFollowResponse)
	err := c.cc.Invoke(ctx, SocialProfileService_UnFollow_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialProfileServiceClient) GetSocialProfile(ctx context.Context, in *GetSocialProfileRequest, opts ...grpc.CallOption) (*GetSocialProfileResponse, error) {
	out := new(GetSocialProfileResponse)
	err := c.cc.Invoke(ctx, SocialProfileService_GetSocialProfile_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *socialProfileServiceClient) GetRecommendations(ctx context.Context, in *GetRecommendationsRequest, opts ...grpc.CallOption) (*GetRecommendationsResponse, error) {
	out := new(GetRecommendationsResponse)
	err := c.cc.Invoke(ctx, SocialProfileService_GetRecommendations_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SocialProfileServiceServer is the server API for SocialProfileService service.
// All implementations must embed UnimplementedSocialProfileServiceServer
// for forward compatibility
type SocialProfileServiceServer interface {
	Follow(context.Context, *FollowRequest) (*FollowResponse, error)
	UnFollow(context.Context, *UnFollowRequest) (*UnFollowResponse, error)
	GetSocialProfile(context.Context, *GetSocialProfileRequest) (*GetSocialProfileResponse, error)
	GetRecommendations(context.Context, *GetRecommendationsRequest) (*GetRecommendationsResponse, error)
	mustEmbedUnimplementedSocialProfileServiceServer()
}

// UnimplementedSocialProfileServiceServer must be embedded to have forward compatible implementations.
type UnimplementedSocialProfileServiceServer struct {
}

func (UnimplementedSocialProfileServiceServer) Follow(context.Context, *FollowRequest) (*FollowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Follow not implemented")
}
func (UnimplementedSocialProfileServiceServer) UnFollow(context.Context, *UnFollowRequest) (*UnFollowResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UnFollow not implemented")
}
func (UnimplementedSocialProfileServiceServer) GetSocialProfile(context.Context, *GetSocialProfileRequest) (*GetSocialProfileResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetSocialProfile not implemented")
}
func (UnimplementedSocialProfileServiceServer) GetRecommendations(context.Context, *GetRecommendationsRequest) (*GetRecommendationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecommendations not implemented")
}
func (UnimplementedSocialProfileServiceServer) mustEmbedUnimplementedSocialProfileServiceServer() {}

// UnsafeSocialProfileServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to SocialProfileServiceServer will
// result in compilation errors.
type UnsafeSocialProfileServiceServer interface {
	mustEmbedUnimplementedSocialProfileServiceServer()
}

func RegisterSocialProfileServiceServer(s grpc.ServiceRegistrar, srv SocialProfileServiceServer) {
	s.RegisterService(&SocialProfileService_ServiceDesc, srv)
}

func _SocialProfileService_Follow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServiceServer).Follow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SocialProfileService_Follow_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServiceServer).Follow(ctx, req.(*FollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialProfileService_UnFollow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnFollowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServiceServer).UnFollow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SocialProfileService_UnFollow_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServiceServer).UnFollow(ctx, req.(*UnFollowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialProfileService_GetSocialProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetSocialProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServiceServer).GetSocialProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SocialProfileService_GetSocialProfile_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServiceServer).GetSocialProfile(ctx, req.(*GetSocialProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SocialProfileService_GetRecommendations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecommendationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocialProfileServiceServer).GetRecommendations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: SocialProfileService_GetRecommendations_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocialProfileServiceServer).GetRecommendations(ctx, req.(*GetRecommendationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// SocialProfileService_ServiceDesc is the grpc.ServiceDesc for SocialProfileService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var SocialProfileService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "SocialProfileService",
	HandlerType: (*SocialProfileServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Follow",
			Handler:    _SocialProfileService_Follow_Handler,
		},
		{
			MethodName: "UnFollow",
			Handler:    _SocialProfileService_UnFollow_Handler,
		},
		{
			MethodName: "GetSocialProfile",
			Handler:    _SocialProfileService_GetSocialProfile_Handler,
		},
		{
			MethodName: "GetRecommendations",
			Handler:    _SocialProfileService_GetRecommendations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "social-profile/social-profile.proto",
}
